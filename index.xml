<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>int0x80</title>
    <link>https://int0x80.github.io/blog/index.xml</link>
    <description>Recent content on int0x80</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jan 2017 16:05:31 -0600</lastBuildDate>
    <atom:link href="https://int0x80.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Home Lab Overview</title>
      <link>https://int0x80.github.io/blog/post/home-lab-overview/</link>
      <pubDate>Mon, 23 Jan 2017 16:05:31 -0600</pubDate>
      
      <guid>https://int0x80.github.io/blog/post/home-lab-overview/</guid>
      <description>&lt;p&gt;Your home lab is a crucial platform for learning and advancing your skills.  From the comfort and privacy of your own home; you can spin up VMs, build infrastructure, break targets, repeatedly fail, and eventually succeed.  This post is the first in a three-part series covering my lab at home.  &lt;/p&gt;

&lt;h1 id=&#34;series-structure&#34;&gt;Series Structure&lt;/h1&gt;

&lt;p&gt;In this first post, I&amp;rsquo;ll give an overview of the lab and highlight some of the more noteworthy aspects.  In the second post, I&amp;rsquo;ll talk about the build and configuration of my SAN, which stores and serves up all of the VMs.  Finally, we&amp;rsquo;ll walk through the setup of my &lt;a href=&#34;https://www.vmware.com/products/vsphere-hypervisor.html&#34;&gt;ESXi&lt;/a&gt; node, which manages and controls the VMs.&lt;/p&gt;

&lt;h1 id=&#34;humble-beginnings&#34;&gt;Humble Beginnings&lt;/h1&gt;

&lt;p&gt;I want to take a step back to discuss the early days of my lab.  Prepare for one of those &amp;ldquo;back in my day&amp;rdquo; flashbacks, or skip to the next section to avoid it.&lt;/p&gt;

&lt;p&gt;Before virtualization, I used to hoard old hardware that was free.  Money was scarce and electricity was cheap/free.  I volunteered at several local organizations that accepted systems donated from local businesses, then filled orders for non-profit organizations who needed computers.  Occasionally the bottom-tier of inventory would need be cleared out to make room for more modern donations, and occasionally I would be able to take one of these bottom-tier systems home with me.  We&amp;rsquo;re talking about taking home a Pentium II in the days of Pentium 4 HT.  I also once landed a Sun SPARCstation!  These things ran Linux and BSD just fine, but had no virtualization support.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1061032/22214449/768375b6-e14c-11e6-90e7-f2efc9b4e2d7.jpg&#34; alt=&#34;Sun SPARCstation, photo from kiwigeek.com&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Most consumer desktop/laptop CPUs now provide virtualization via AMD-V or Intel VT.  In the event you&amp;rsquo;re operating from hardware without virtualization support, you can acquire inexpensive devices like the Raspberry Pi or one of the many available alternatives to use as targets.  Of course, volunteering and dumpster diving are still viable options, as well.&lt;/p&gt;

&lt;p&gt;I was hooked on virtualization once capable hardware was available to me.  Nothing large scale, as my VMs were running from a single consumer-grade system, but I could at least spin up multiple systems to do things like malware analysis or isolated browsing with snapshosts.  Snapshots are a critical feature since re-imaging a system can take many minutes to hours, while it takes less than one second to revert a snapshot and restore system state.  Bonus for also not needing extra keyboards, mice, monitors, etc. since all VMs are accessible from your host system instead of being individual towers or laptops.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;tl;dr:&lt;/em&gt; &lt;strong&gt;Opt for virtualization if possible, but inexpensive/free hardware can also be effective.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;current-state&#34;&gt;Current State&lt;/h1&gt;

&lt;p&gt;My home lab currently consists of two physical systems:  a SAN, and an ESXi node.  The configuration of each system will be covered in subsequent posts; but I&amp;rsquo;ll take this opportunity to #humblebrag on some of the stats.  The SAN exposes ~22TB of storage via 10Gbps link, while the ESXi node has two Xeon CPUs with 12 cores and 96GB of RAM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1061032/22214656/480d9760-e14d-11e6-855e-943be3e779f5.png&#34; alt=&#34;ESXi stats humblebrag&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Projects are separated into individual virtual networks.  For example, my VMs for firmware reversing are on one network while VMs from &lt;a href=&#34;https://www.vulnhub.com/&#34;&gt;VulnHub&lt;/a&gt; are on another network.  Each network is managed by a virtual switch and a clone of a simple router VM that I built using Debian, dnsmasq, and iptables.  Larger projects with multiple network segments use multiple switches and router VMs.&lt;/p&gt;

&lt;h1 id=&#34;wrapping-up&#34;&gt;Wrapping Up&lt;/h1&gt;

&lt;p&gt;Instantly spinning up new VMs and networks allows me to focus on the goals of a project, rather than being distracted by infrastructure tasks.  Likewise, instantly tearing down or reverting VMs curbs inhibition of a serious mistake wiping out hours or days of work.  A robust lab abstracts away many of the management items thus reducing overhead and facilitating efficiency in starting and completing new projects.&lt;/p&gt;

&lt;p&gt;In the next part, we&amp;rsquo;ll cover the build and configuration of the SAN, which was quite a fun learning experience.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blog Notes</title>
      <link>https://int0x80.github.io/blog/post/blog-notes/</link>
      <pubDate>Sat, 21 Jan 2017 08:50:47 -0600</pubDate>
      
      <guid>https://int0x80.github.io/blog/post/blog-notes/</guid>
      <description>&lt;p&gt;Hello, World.  Figured it was apropos to start the blog with some notes on how the blog was built.  Read on for details of standing up a Hugo blog on GitHub Pages.&lt;/p&gt;

&lt;h1 id=&#34;install&#34;&gt;Install&lt;/h1&gt;

&lt;p&gt;The blog is written and published from an &lt;a href=&#34;https://github.com/int0x80/ctf-vm&#34;&gt;Ubuntu VM&lt;/a&gt;.  A build of hugo is already pre-packaged and available in apt, but unfortunately ships with some bugs.  Fear not, installing the &lt;a href=&#34;https://github.com/spf13/hugo/releases/latest&#34;&gt;latest release&lt;/a&gt; is simple.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget https://github.com/spf13/hugo/releases/download/v0.18.1/hugo_0.18.1-64bit.deb
$ sudo dpkg -i ./hugo_0.18.1-64bit.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A quick version check confirms the install.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo version 
Hugo Static Site Generator v0.18.1 BuildDate: 2016-12-30T04:05:34-06:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;new-site-new-post&#34;&gt;New Site, New Post&lt;/h1&gt;

&lt;p&gt;Getting the blog off the ground takes only a moment.  First create a site, then a post.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site blog
$ cd !$ 
$ hugo new post/blog-notes.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Posts are written in markdown so editing is quick, simple, and can be accomplished with your editor of choice.&lt;/p&gt;

&lt;h1 id=&#34;what-s-important&#34;&gt;What&amp;rsquo;s Important&lt;/h1&gt;

&lt;p&gt;Aside from publishing via static page generator, I also had a few demands.  Syntax highlighting should look nice, and be easily integrated.  For example, I prefer markdown&amp;rsquo;s wrapping as opposed to MediaWiki&amp;rsquo;s GeSHi &lt;code&gt;&amp;lt;syntaxhighlight ...&amp;gt;&lt;/code&gt; delimeters.  Next, a presentable theme that can easily be wired up.  And lastly, customized summaries to keep the listing pages tidy.&lt;/p&gt;

&lt;h2 id=&#34;syntax-highlighting&#34;&gt;Syntax Highlighting&lt;/h2&gt;

&lt;p&gt;Hugo uses &lt;a href=&#34;http://pygments.org/&#34;&gt;Pygments&lt;/a&gt; for syntax highlighting.  A client-side highlighter, like &lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt; can easily be incorporated.  I opted for the latter based on the availability of languages and styles.  Lexers and styles are easily incorporated in the header of each post.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scripts = [
  &amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/highlight.min.js&amp;quot;,
]

css = [
  &amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/styles/ocean.min.css&amp;quot;,
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;theme&#34;&gt;Theme&lt;/h2&gt;

&lt;p&gt;As with any modern blogging app, Hugo facilitates &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;themes&lt;/a&gt;.  I went with &lt;a href=&#34;http://themes.gohugo.io/hugo-geo/&#34;&gt;Hugo Geo&lt;/a&gt; and pretty much copied the stylesheet from author&amp;rsquo;s site.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd themes/
$ git clone https://github.com/alexurquhart/hugo-geo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then configure the &lt;code&gt;config.toml&lt;/code&gt; file in the main directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseURL = &amp;quot;https://int0x80.github.io/blog/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;Hack All The Things&amp;quot;
disqusShortname = &amp;quot;xcdx80&amp;quot;
paginate = 5


[taxonomies]
  tag = &amp;quot;tags&amp;quot;
  category = &amp;quot;categories&amp;quot;
  series = &amp;quot;series&amp;quot;

[params]
  showglobe = false
  highlight = true

  favicon = &amp;quot;favicon.ico&amp;quot;

  github = &amp;quot;https://github.com/int0x80&amp;quot;
  twitter = &amp;quot;https://twitter.com/int0x80&amp;quot;
  
  profilepic = &amp;quot;img/int0x80.jpg&amp;quot;
  
  title = &amp;quot;int0x80&amp;quot;
  subtitle = &amp;quot;Hack All The Things&amp;quot;
  
  [[params.navlinks]]
  name = &amp;quot;About&amp;quot;
  url = &amp;quot;about&amp;quot;
  
  [[params.navlinks]]
  name = &amp;quot;Blog&amp;quot;
  url = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;summary-length&#34;&gt;Summary Length&lt;/h2&gt;

&lt;p&gt;The default length for a post&amp;rsquo;s summary is 70 words.  Meaning Hugo displays the first 70 words of a post, followed by a &amp;ldquo;Read More&amp;rdquo; link to the full post.  This can be modified by inserting &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; into the post content to delimit the summary.  As an example, the beginning content of this post is as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hello, World.  Figured it was apropos to start the blog with some notes on how the blog was built.  Read on for details of standing up a Hugo blog on GitHub Pages.&amp;lt;!--more--&amp;gt;

# Install

The blog is written and published from an [Ubuntu VM](https://github.com/int0x80/ctf-vm).  Fortunately a build of hugo is already pre-packaged and available in apt.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h1&gt;

&lt;p&gt;The last steps are to do some git wrangling to push the site up to GitHub.  The &lt;code&gt;baseURL&lt;/code&gt; parameter has already been situated in the config so let&amp;rsquo;s generate the site content with hugo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --theme=hugo-geo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates the &lt;code&gt;public/&lt;/code&gt; directory which will be pushed up to GitHub.  Now to set up version control.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init
$ echo &amp;quot;/public/&amp;quot; &amp;gt;&amp;gt; .gitignore
$ echo &amp;quot;/themes/&amp;quot; &amp;gt;&amp;gt; .gitignore
$ git add --all
$ git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, create an empty repository named &lt;code&gt;blog&lt;/code&gt; on GitHub; and add it as remote.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd public
$ git init
$ git remote add origin git@github.com:int0x80/blog.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then create a branch and push it up.  Remember, we&amp;rsquo;re still under &lt;code&gt;public/&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout -b gh-pages
$ git add --all
$ git commit -m &amp;quot;blog added&amp;quot;
$ git push -f origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mostly painless, overall.  I look forward to sharing my notes with the internet.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://int0x80.github.io/blog/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://int0x80.github.io/blog/about/</guid>
      <description>&lt;p&gt;My name is int0x80 (pronounced &amp;ldquo;int eighty&amp;rdquo;), I&amp;rsquo;m the rapper in &lt;a href=&#34;http://dualcoremusic.com&#34;&gt;Dual Core&lt;/a&gt;.  My main interests are security, reverse engineering, and privacy.  Mess around with technology and see what happens.  Hack all the things!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>